{"title": "INTEL\u624b\u518cVT 25\u7ae0\u8bb0\u5f55", "tags": "VT", "content": "# VMCSs\r\n\r\n+ VMPTRLD \u6fc0\u6d3b\u5e76\u6210\u4e3a\u5f53\u524d\u7684VMCS\r\n+ VMCS link\u6307\u9488\u57df\r\n+ VMCLEAR\u53cd\u4e4b\r\n+ VMPTRST \u5b58\u50a8VMCS\u5230\u5730\u5740\uff0c\u5982\u679c\u6ca1\u6709\u5f53\u524dVMCS\uff0c\u5219\u503c\u4e3aFFFFFFFF_FFFFFFFFH\r\n\r\nVMCS\u542f\u52a8\u72b6\u6001DFA\u5982\u4e0b\r\n\r\n![img] (static\\imgs\\20161206002120.png)\r\n\r\n\u5176\u4e2d\u6ca1\u6709\u8bf4\u660e\u6240\u6709SHADOW VMCS\u8f6c\u6362\u6210\u6d3b\u8dc3\u7684\u65b9\u5f0f\r\n\r\n### VMCS\u57df\u683c\u5f0f\r\n```c\r\nByte Offset          Contents  \r\n0                    Bits 30:0: VMCS revision identifier  \r\n                     Bit 31: shadow-VMCS indicator\r\n4                    VMX-abort indicator  \r\n8                    VMCS data \r\n```\r\n\r\n##### VMCS DATA\r\n- Guest-state area. Processor state is saved into the guest-state area on VM exits and loaded from there on\r\nVM entries.\r\n- Host-state area. Processor state is loaded from the host-state area on VM exits.\r\n- VM-execution control fields. These fields control processor behavior in VMX non-root operation. They\r\ndetermine in part the causes of VM exits.\r\n- VM-exit control fields. These fields control VM exits.\r\n- VM-entry control fields. These fields control VM entries.\r\n- VM-exit information fields. These fields receive information on VM exits and describe the cause and the\r\nnature of VM exits. On some processors, these fields are read-only.\r\n\r\n##### Basic VM-Exit Information\r\nThe 31 Bit Position of VM Exit reason is indicate VM-entry failure\r\n\r\n##### VMCS\u4f7f\u7528\u8981\u70b9\r\n- VMCS\u4e0d\u5e94\u8be5\u5728\u591a\u4e2a\u903b\u8f91\u5904\u7406\u5668\u4e0a\u8bbe\u7f6e\u4e3a\u6d3b\u52a8\u72b6\u6001\u3002\u4ece\u4e00\u4e2a\u903b\u8f91\u5904\u7406\u5668\u8fc1\u79fb\u5230\u53e6\u4e00\u4e2a\u5e94\u8be5\u5bf9\u6b64VMCS\u6267\u884cVMCLEAR\u6307\u4ee4\r\n- \u4e0d\u8981\u66f4\u6539\u6d3b\u52a8\u72b6\u6001VMCS\u7684shadow-VMCS \u6807\u5fd7\r\n- \u4fee\u6539VMCS\u4f7f\u7528VMREAD\u548cVMWRITE\uff0c\u4e0d\u8981\u76f4\u63a5\u8bfb\u5199\u5185\u5b58(\u5728\u6267\u884cVMPTRLD\u524d\u5220\u9664\u6240\u6709VMCS\u7684\u7ebf\u6027\u5730\u5740\u6620\u5c04\uff0c\u5728VMCLEAR\u524d\u4e0d\u8981\u91cd\u6620\u5c04)\r\n- VMXOFF\u6216\u8005\u5931\u53bb\u7535\u6e90\u903b\u8f91\u5904\u7406\u5668\u4e4b\u524d\u4f7f\u7528VMCLEAR\r\n- \u521d\u59cb\u5316VMCS\u5e94\u8be5\u9996\u5148\u8c03\u7528VMCLEAR\r\n- \u4fee\u6539VMCS\u5e94\u8be5\u786e\u4fdd\u6ca1\u6709VMX non-root\u64cd\u4f5c\u4f1a\u7528\u5230\u5176\u4e2d\u7684\u6570\u636e\r\n- VMXON\u6307\u4ee4\u64cd\u4f5c\u6570\u5fc5\u987b4K\u5bf9\u9f50\uff0c\u6267\u884cVMXON\u540e\uff0c\u4e0d\u5e94\u5728VMXOFF\u524d\u4fee\u6539\u6b64\u533a\u57df\r\n\r\n# \u76f8\u5173\u9519\u8bef\u4f18\u5148\u7ea7\r\n\u4ee5\u4e0b\u64cd\u4f5c\u4f1a\u4ea7\u751f\u5f02\u5e38\u800c\u975eVM EXIT\uff1a\r\n-  \u7279\u6743\u7b49\u7ea7\u9519\u8bef\u6307\u4ee4\u3001TSS\u4e2dI/O\u6743\u9650\u4f4d\u9519\u8bef\u3002\u4f8b\u5982R3\u8c03\u7528RDMSR\uff0c\u4e0d\u4f1a\u4ea7\u751fVM EXIT\r\n-  \u5f53\u7279\u5b9a\u6307\u4ee4\u64cd\u4f5c\u6570\u4f18\u5148\u4e8eVM EXIT\uff0c\u4f8b\u5982LWSW\r\n-  unconditional I/O\u6216\u8005I/O bitmaps\u63a7\u5236\u4f4d\u6bd4\u4ee5\u4e0b\u4f18\u5148\u7ea7\u9ad8\uff1a\r\n  -  \u901a\u7528\u4fdd\u62a4\u9519\u8bef\uff0cINS\u7528ES\u6bb5\uff0cOUTS\u7528DS\u6bb5\uff08\u9664\u975e\u4f7f\u7528\u6307\u4ee4\u4fee\u9970\u7b26\uff09\r\n  -  \u901a\u7528\u4fdd\u62a4\u9519\u8bef\uff0c\u8d85\u8fc7\u6bb5\u63cf\u8ff0\u7b26\u504f\u79fb\u9650\u5236\r\n  -  \u5bf9\u9f50\u68c0\u67e5\u9519\u8bef\r\n- \u9664\u53bb\u4ee5\u4e0a\u7684VM EXITS\u6bd4\u5f02\u5e38\u9519\u8bef\u4f18\u5148\u7ea7\u9ad8\r\n\r\n# \u65e0\u6761\u4ef6VM EXITS\u6307\u4ee4\r\nCPUID GETSEC INVD XSETBV INVEPT INVVPID VMCALL VMCLEAR VMLAUNCH VMPTRLD VMPTRST VMRESUME VMXOFF VMXON\r\n\r\n# \u6709\u6761\u4ef6VM EXITS\u6307\u4ee4\r\nCLTS ENCLS IN INS/INSB/INSW/INSD OUT OUTS/OUTSB/OUTSW/OUTSD INVLPG INVPCID LGDT LIDT LLDT LTR SGDT SIDT SLDT STR LMSW MONITOR MOV XX,CR3 MOV XX,CR8 MOV CR0,XX MOV CR3,XX MOV CR4,XX MOV CR8,XX MOVDR MWAIT PAUSE RDMSR RDPMC RDRAND RDSED RDTSC RDTSCP RSM VMREAD VMWRITE WBINVD WRMSR XRSTORS XSAVES\r\n\r\n# \u5176\u4ed6\u5bfc\u81f4VM EXITS \u539f\u56e0\r\n- \u5f02\u5e38\uff08\u9519\u8bef\u3001\u9677\u9631\u3001\u7ec8\u6b62\uff09\u57fa\u4e8eexception bitmap\uff0c\u5305\u62ecINT3 INTO BOUND UD2\u6307\u4ee4\r\n- Triple\u9519\u8bef\r\n- \u5916\u90e8\u4e2d\u65ad\r\n- NMIs\r\n- INIT\u4fe1\u53f7\r\n- Start-up IPIs\r\n- \u4efb\u52a1\u5207\u6362\r\n- SMIs\r\n- VMX-preemption timer\r\n- interrupt-window exiting\u6807\u5fd7\u4f4d\r\n- NMI-windows exiting\u6807\u5fd7\u4f4d\r\n\r\n# VMX non-root\u53d8\u5316\u7684\u6307\u4ee4\r\nCLTS INVPCID IRET LWSW MOV XX,CR0 MOV XX,CR3 MOV XX,CR4 MOV XX,CR8 MOV CR0,XX MOV CR3,XX\r\nMOV CR4,XX MOV CR8,XX NWAIT RDMSR RDPID RDTSC RDTSCP SWSW WRMSR XRSTORS XSAVES\r\n\r\n# \u5176\u4ed6VMX non-root\u53d8\u5316\r\n- external-interrupt exiting\u6807\u5fd7\u7f6e\u4f4d\uff0c\u5f71\u54cdRFLAGS.IF\u3001STI\u3001MOV SS\u3001NMIs\u884c\u4e3a\r\n\r\n# VMX non-root\u7279\u6b8a\u7279\u6027\r\n- VMX-preemption timer \r\n- monitor trap flag\r\n- \u7ffb\u8bd1\u5ba2\u6237\u7269\u7406\u5730\u5740\r\n- VM\u51fd\u6570\r\n- \u865a\u62df\u5316\u5f02\u5e38\r\n\r\n# \u65e0\u9650\u5236\u5ba2\u6237\u673a\r\n\u7b2c\u4e8c\u4e2a\u4e4b\u540e\u7684\u5904\u7406\u5668\u652f\u6301\u5728\u975e\u5206\u9875\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u8fd0\u884c"}